Texture2D    g_Texture;
SamplerState g_Texture_sampler;  // By convention, texture samplers must use the '_sampler' suffix

#include "FSRInclude.h"

struct PSInput 
{ 
    float4 Pos : SV_POSITION; 
    float2 UV : TEX_COORD0;
    AU4 con0 : TEX_COORD1;
    AU4 con1 : TEX_COORD2;
    AU4 con2 : TEX_COORD3;
    AU4 con3 : TEX_COORD4;
};

struct PSOutput
{
    float4 Color : SV_TARGET;
};

AF4 FsrEasuRF(AF2 p) { AF4 res = g_Texture.GatherRed(g_Texture_sampler, p, int2(0, 0)); return res; }
AF4 FsrEasuGF(AF2 p) { AF4 res = g_Texture.GatherGreen(g_Texture_sampler, p, int2(0, 0)); return res; }
AF4 FsrEasuBF(AF2 p) { AF4 res = g_Texture.GatherBlue(g_Texture_sampler, p, int2(0, 0)); return res; }

void main(in  PSInput  PSIn,
          out PSOutput PSOut)
{
    AU2 gxy = AU2(PSIn.UV.xy * outSize.xy); // Integer pixel position in output.
    AF3 Gamma2Color = AF3(0, 0, 0);
    FsrEasuF(Gamma2Color, gxy, PSIn.con0, PSIn.con1, PSIn.con2, PSIn.con3);

    PSOut.Color = float4(Gamma2Color, 1.0);
}
